<?php

/**
 * @file
 * This file contain hooks and other functions.
 */

/**
 * Implements hook_entity_info().
 */
function car_entity_info() {
  return [
    'car' => [
      'label' => t('Car'),
      'base table' => 'cars',
      'entity keys' => [
        'id' => 'cid',
        'label' => 'model',
      ],
      'module' => 'car',
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function car_menu() {
  $items = [];
  $items['cars'] = [
    'title' => 'Cars',
    'page callback' => 'car_show_callback',
    'access callback' => TRUE,
  ];
  $items['cars/form'] = [
    'title' => 'Generate/Delete cars',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['car_form'],
    'access callback' => TRUE,
  ];
  return $items;
}

/**
 * Callback function to build table for cars.
 */
function car_show_callback() {
  $table_rows = [];

  // Define headers for table theme output and for sorting in db_select.
  $table_header = [
    'model' => ['data' => t('Model'), 'field' => 'model'],
    'color' => ['data' => t('Color'), 'field' => 'color'],
    'year' => ['data' => t('Year'), 'field' => 'year'],
    'mileage' => ['data' => t('Mileage'), 'field' => 'mileage'],
    'price' => ['data' => t('Price ($)'), 'field' => 'price'],
  ];

  // Select records from the cars table.
  $query = db_select('cars', 'c')->extend('TableSort');
  $query->fields('c', ['model', 'color', 'year', 'mileage', 'price'])
    ->orderByHeader($table_header);
  $cars = $query->execute();

  // Loop through each result.
  foreach ($cars as $car) {
    $table_rows[] = [
      $car->model,
      $car->color,
      $car->year,
      $car->mileage,
      $car->price,
    ];
  }

  // If rows aren't empty, theme the rows.
  if (!empty($table_rows)) {
    $output = theme('table', [
      'header' => $table_header,
      'rows' => $table_rows,
    ]);
  }
  else {
    $output = "No records found.";
  }
  return $output;
}

/**
 * Function to build form for generating/deleting cars.
 */
function car_form($form, &$form_state) {
  $form['markup']['#markup'] = format_string('<h4>@markup</h4>',
    [
      '@markup' => t("Press 'Generate' button to add 5 cars in the database,
    press 'Delete' button to delete 5 cars in the database.)"),
    ]);

  // Add button "Generate".
  $form['generate'] = [
    '#type' => 'submit',
    '#value' => t('Generate'),
    '#submit' => ['car_form_generate_submit'],
  ];

  // Add button "Delete".
  $form['delete'] = [
    '#type' => 'submit',
    '#value' => t('Delete'),
    '#submit' => ['car_form_delete_submit'],
  ];
  return $form;
}

/**
 * Function to generate cars.
 */
function car_form_generate_submit($form, &$form_state) {
  // Checks the number of records in the database.
  $count = db_select('cars', 'c')
    ->fields('c', ['cid'])
    ->execute();
  $rowCount = $count->rowCount();

  if ($rowCount >= 5) {
    drupal_set_message(t('You can generate only 5 cars!'), 'error', TRUE);
  }
  else {
    // Array of cars for adding to the database.
    $cars = [
      [
        'model' => 'Kia Sportage',
        'color' => 'Blue',
        'year' => 2013,
        'mileage' => 54000,
        'price' => 16000,
      ],
      [
        'model' => 'BMW X5',
        'color' => 'Black',
        'year' => 2010,
        'mileage' => 77000,
        'price' => 12000,
      ],
      [
        'model' => 'Audi A4',
        'color' => 'White',
        'year' => 2017,
        'mileage' => 8500,
        'price' => 36000,
      ],
      [
        'model' => 'Volvo XC90',
        'color' => 'Red',
        'year' => 2018,
        'mileage' => 2000,
        'price' => 99000,
      ],
      [
        'model' => 'Mercedes E300',
        'color' => 'Yellow',
        'year' => 2016,
        'mileage' => 25000,
        'price' => 26000,
      ],
    ];
    // Adds cars to the database.
    $query = db_insert('cars')->fields([
      'model',
      'color',
      'year',
      'mileage',
      'price',
    ]);
    foreach ($cars as $car) {
      $query->values($car);
    }
    $query->execute();

    drupal_set_message(t('All cars are added to the database!'), 'status', TRUE);
  }
}

/**
 * Function to deleting cars.
 */
function car_form_delete_submit($form, &$form_state) {
  $count = db_delete('cars')->execute();
  if ($count) {
    drupal_set_message(t('All cars are deleted!'), 'status', TRUE);
  }
  else {
    drupal_set_message(t('Oops! Nothing to delete!'), 'error', TRUE);
  }
}
